#!/bin/bash

TEST_LOG=tests.log

exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>${TEST_LOG} 2>&1

trap ctrl_c INT

function ctrl_c() {
  docker-compose -f rsknode/docker-compose.yml down
  exit 1
}

NETWORK=$(docker network ls --filter name=enveloping-tests-net -q)
if [ -z "${NETWORK}" ]; then
        echo "Creating network enveloping-tests-net"
        docker network create enveloping-tests-net
fi

function run_batch() {
  TESTS=("$@")
  unset TESTS[0]
  BATCH_NAME=$1
  echo "#################################################################################### Starting Batch ${BATCH_NAME} ####################################################################################"
  docker-compose -f rsknode/docker-compose.yml build
  docker-compose -f rsknode/docker-compose.yml up -d
  echo "#################################################################################### START BATCH TESTS ####################################################################################"
  npx truffle test --network testing "${TESTS[@]}"
  echo "#################################################################################### END BATCH TESTS ####################################################################################"
  docker-compose -f rsknode/docker-compose.yml down
  echo "#################################################################################### Ending Batch ${BATCH_NAME} ####################################################################################"
}

# Test_Group_1
run_batch Test_Group_1 \
    test/RelayHubPenalizations.test.ts \
    test/RelayHubRegistrationsManagement.test.ts \
    test/TxStoreManager.test.ts \
    test/common/VersionManager.test.ts \
    test/regressions/PayableWithEmit.test.ts \
    test/relayclient/AccountManager.test.ts \
    test/relayclient/ContractInteractor.test.ts \
    test/relayclient/Configurator.test.ts

# Test_Group_2
run_batch RelaySelectionManager test/relayclient/RelaySelectionManager.test.ts
run_batch RelayServerRequestsProfiling test/relayserver/RelayServerRequestsProfiling.test.ts
run_batch ServerConfigParams test/relayserver/ServerConfigParams.test.ts
run_batch TransactionManager test/relayserver/TransactionManager.test.ts
run_batch KnownRelaysManager test/relayclient/KnownRelaysManager.test.ts
run_batch SmartWallet test/smartwallet/SmartWallet.test.ts
run_batch SampleRecipient test/SampleRecipient.test.ts
run_batch StakeManagement test/StakeManagement.test.ts
run_batch RSKAddressValidator test/RSKAddressValidator.test.ts
run_batch EnvelopingUtils test/EnvelopingUtils.test.ts
run_batch SmartWalletDiscovery test/relayclient/SmartWalletDiscovery.test.ts

# Test_Group_3
run_batch Test_Group_3 \
    test/Flows.test.ts \
    test/TestEnvironment.test.ts \
    test/HttpWrapper.test.ts \
    test/KeyManager.test.ts \
    test/PaymasterCommitment.test.ts \
    test/WalletFactory.test.ts

# Test_Group_4
run_batch Test_Group_4 \
    test/relayclient/RelayClient.test.ts \
    test/relayserver/NetworkSimulation.test.ts \
    test/relayserver/RegistrationManager.test.ts \
    test/relayserver/RelayServer.test.ts \
    test/relayserver/RelayServer.webpack.test.ts

# Test_Group_5
run_batch RelayHub test/RelayHub.test.ts
run_batch VersionRegistry test/VersionRegistry.test.ts
run_batch RelayProvider test/relayclient/RelayProvider.test.ts
run_batch RelaySelectionManager test/relayclient/RelaySelectionManager.test.ts